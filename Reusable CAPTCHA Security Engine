import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.Random;
import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;

public class CaptchaGenerator {

    private static final String CHARACTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    private static final int CAPTCHA_LENGTH = 6;
    private static final int WIDTH = 150;
    private static final int HEIGHT = 50;
    private String captchaString;

    public BufferedImage generateCaptcha() {
        captchaString = generateRandomString(CAPTCHA_LENGTH);
        BufferedImage captchaImage = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = captchaImage.createGraphics();

        // Fill background
        g2d.setColor(Color.WHITE);
        g2d.fillRect(0, 0, WIDTH, HEIGHT);

        // Draw the characters
        Random rand = new Random();
        g2d.setFont(new Font("Arial", Font.BOLD, 40));
        for (int i = 0; i < captchaString.length(); i++) {
            g2d.setColor(new Color(rand.nextInt(256), rand.nextInt(256), rand.nextInt(256)));
            int x = 20 + i * 25;
            int y = 35 + rand.nextInt(10);
            g2d.drawString(String.valueOf(captchaString.charAt(i)), x, y);
        }

        // Add some noise
        for (int i = 0; i < 15; i++) {
            g2d.setColor(new Color(rand.nextInt(256), rand.nextInt(256), rand.nextInt(256)));
            int x1 = rand.nextInt(WIDTH);
            int y1 = rand.nextInt(HEIGHT);
            int x2 = rand.nextInt(WIDTH);
            int y2 = rand.nextInt(HEIGHT);
            g2d.drawLine(x1, y1, x2, y2);
        }

        g2d.dispose();
        return captchaImage;
    }

    private String generateRandomString(int length) {
        StringBuilder sb = new StringBuilder(length);
        Random rand = new Random();
        for (int i = 0; i < length; i++) {
            sb.append(CHARACTERS.charAt(rand.nextInt(CHARACTERS.length())));
        }
        return sb.toString();
    }

    public boolean validateCaptcha(String input) {
        return captchaString.equals(input);
    }

    public String getCaptchaString() {
        return captchaString;
    }

    public static void main(String[] args) {
        CaptchaGenerator generator = new CaptchaGenerator();
        BufferedImage captcha = generator.generateCaptcha();
        try {
            // Save the captcha image to a file
            ImageIO.write(captcha, "png", new File("captcha.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Test validation
        System.out.println("Generated CAPTCHA: " + generator.getCaptchaString());
        System.out.println("Validation Result: " + generator.validateCaptcha(generator.getCaptchaString()));
    }
}
